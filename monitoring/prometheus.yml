# Prometheus configuration for Gemini Enterprise Architect monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'gemini-enterprise'
    environment: '${ENVIRONMENT}'

# Rules for alerting and recording
rule_files:
  - "alerting/prometheus-alerts.yml"
  - "slo/error-budget-alerts.yml"
  - "logging/log-aggregation-rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Gemini Agent Server
  - job_name: 'gemini-agent-server'
    static_configs:
      - targets: ['agent-server:8000']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true

  # Gemini Knowledge Base
  - job_name: 'gemini-knowledge-base'
    static_configs:
      - targets: ['knowledge-base:8001']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # OpenTelemetry Collector
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8889']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # System metrics via Node Exporter
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # Container metrics via cAdvisor
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # PostgreSQL metrics
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # Blackbox probing for external endpoints
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - http://agent-server:8000/api/v1/health
          - http://knowledge-base:8001/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Pushgateway for batch jobs
  - job_name: 'pushgateway'
    static_configs:
      - targets: ['pushgateway:9091']
    scrape_interval: 30s
    honor_labels: true

  # Alertmanager metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Loki metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Jaeger metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Service discovery for Docker containers
  - job_name: 'docker-containers'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 30s
    relabel_configs:
      # Only monitor containers with the prometheus.enable label
      - source_labels: [__meta_docker_container_label_prometheus_enable]
        action: keep
        regex: true
      # Use custom port if specified
      - source_labels: [__meta_docker_container_label_prometheus_port]
        action: replace
        target_label: __address__
        regex: (.+)
        replacement: ${1}
      # Use custom metrics path if specified
      - source_labels: [__meta_docker_container_label_prometheus_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Set job name from container label
      - source_labels: [__meta_docker_container_label_prometheus_job]
        action: replace
        target_label: job
      # Add container labels as metrics labels
      - regex: __meta_docker_container_label_(.+)
        action: labelmap
        replacement: ${1}
      # Add container name
      - source_labels: [__meta_docker_container_name]
        action: replace
        target_label: container

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: ['alertmanager:9093']
      timeout: 10s
      api_version: v2

# Remote write configuration (for external systems)
remote_write:
  # Uncomment and configure for external metrics storage
  # - url: "https://prometheus-remote-write.example.com/api/v1/write"
  #   basic_auth:
  #     username: "${REMOTE_WRITE_USERNAME}"
  #     password: "${REMOTE_WRITE_PASSWORD}"
  #   queue_config:
  #     capacity: 2500
  #     max_shards: 200
  #     min_shards: 1
  #     max_samples_per_send: 500
  #     batch_send_deadline: 5s
  #     min_backoff: 30ms
  #     max_backoff: 100ms

# Storage configuration
storage:
  tsdb:
    retention.time: 90d
    retention.size: 50GB
    wal-compression: true

# Performance tuning
global:
  scrape_timeout: 10s
  query_log_file: /prometheus/queries.log