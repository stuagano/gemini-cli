[pytest]
# Pytest configuration for Gemini Enterprise Architect

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum Python version
minversion = 3.8

# Command line options
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --maxfail=1
    --ff
    -p no:warnings

# Asyncio configuration
asyncio_mode = auto

# Markers
markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that may require external services
    slow: Tests that take more than 5 seconds
    requires_api: Tests that require API keys or network access
    skip_ci: Tests to skip in CI environment

# Coverage settings
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning